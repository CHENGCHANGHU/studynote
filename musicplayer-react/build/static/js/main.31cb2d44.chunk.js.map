{"version":3,"sources":["serviceWorker.js","components/MusicPlayer/MusicPlayer.js","index.js"],"names":["Boolean","window","location","hostname","match","MusicPlayer","arguments","setState","state","panelFlag","console","log","playFlag","theMusicAudio","currentTime","currMusicDuration","play","pause","musicObj","index","id","title","src","baseUrl","musicSrc","playMusic","currMusicObj","currMusicIndex","event","refs","localFile","click","musicList","localMusicFile","target","files","reader","FileReader","readAsDataURL","onprogress","e","onload","URL","createObjectURL","length","name","picSrc","clientX","offsetLeft","offsetWidth","scale","Math","min","max","parentNode","currMusicTime","stopPropagation","controllerFlag","controller","document","addEventListener","mouseMoveHandler","pauseMusic","removeEventListener","throttle","keyCode","duration","changeMusicByNext","percntage","playedBarWidth","controllerLeft","setTimeout","timeRanges","buffered","currMusicBufferedLength","end","bufferedUpdateHandler","Promise","resolve","reject","currMusicUrl","requestHeader","method","accept","responseType","fetch","respHeader","respReader","body","getReader","totalLength","headers","get","loadedDataBuffer","Uint8Array","loadedLength","read","value","done","set","loadingProgress","toFixed","blobURL","Blob","then","url","sec","floor","fn","delay","valid","Audio","this","__proto__","constructor","keyPressHandler","durationChangeHandler","endedHandler","timeUpdateHandler","mouseUpHandler","changeMusicByInputFile","className","onKeyPress","onClick","changeMusicByPrev","alt","openMusicPanel","clickProgressBarHandler","style","width","clickBufferedBarHandler","clickPlayedBarHandler","onMouseDown","mouseDownControllerHandler","preventDefault","left","sec2min","type","ref","clickLocalMusicHandler","map","key","href","changeMusicByMusicPanel","React","Component","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31cb2d44.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n// import style from \"./MusicPlayer.css\";\r\nimport \"./MusicPlayer.css\";\r\n\r\nexport default class MusicPlayer extends React.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    const theMusicAudio = new Audio(null);\r\n    this.state = {\r\n      theMusicAudio,\r\n      panelFlag: false,\r\n      controllerFlag: false,\r\n      controller: null,\r\n      baseUrl: \"https://chengchanghu.github.io/studynote/musicplayer-react/src/components/MusicPlayer\",\r\n      // localFileInput: null,\r\n      loadingProgress: 0,\r\n      musicList: [\r\n        // { id: 1, title: \"日落大道\", picSrc: require(\"./sample/img/sunset-road.jpg\"), musicSrc: require(\"./sample/music/sunset-road.mp3\") },\r\n        // { id: 2, title: \"飘向北方\", picSrc: require(\"./sample/img/drift-north.jpg\"), musicSrc: require(\"./sample/music/drift-north.mp3\") },\r\n        // { id: 3, title: \"Skin\", picSrc: require(\"./sample/img/skin.jpg\"), musicSrc: require(\"./sample/music/skin.mp3\") },\r\n        // { id: 4, title: \"又过了一年\", picSrc: require(\"./sample/img/another-year.jpg\"), musicSrc: require(\"./sample/music/another-year.mp3\") },\r\n        { id: 1, title: \"日落大道\", picSrc: \"/sample/img/sunset-road.jpg\", musicSrc: \"/sample/music/sunset-road.mp3\" },\r\n        { id: 2, title: \"飘向北方\", picSrc: \"/sample/img/drift-north.jpg\", musicSrc: \"/sample/music/drift-north.mp3\" },\r\n        { id: 3, title: \"Skin\", picSrc: \"/sample/img/skin.jpg\", musicSrc: \"/sample/music/skin.mp3\" },\r\n        { id: 4, title: \"又过了一年\", picSrc: \"/sample/img/another-year.jpg\", musicSrc: \"/sample/music/another-year.mp3\" },\r\n      ],\r\n\r\n      // 当前播放音乐的状态\r\n      currMusicObj: null,\r\n      currMusicIndex: 3,\r\n      currMusicDuration: 0,// 当前音乐时间总长\r\n      currMusicTime: 0,\r\n      // currMusicBufferedTimeId: 0,\r\n      currMusicBufferedLength: 0,\r\n      playedBarWidth: 0,\r\n      controllerLeft: 0,\r\n      playFlag: false,\r\n    }\r\n\r\n    this.state.currMusicObj = this.state.musicList[3];\r\n    // this.state.theMusicAudio.src = this.state.currMusicObj.musicSrc;\r\n    // console.log(isNaN(this.state.theMusicAudio.duration));\r\n  }\r\n\r\n  openMusicPanel = () => {\r\n    this.setState({ ...this.state, panelFlag: !this.state.panelFlag });\r\n    // this.state.theMusic.play();\r\n  }\r\n\r\n  // unsafe\r\n  // componentWillMount() {\r\n  //   this.setState({ ...this.state, currMusicObj: this.state.musicList[3] });\r\n  // }\r\n\r\n  // shouldComponentUpdate() {\r\n  //   if (this.state.theMusicAudio) return true;\r\n  // }\r\n\r\n  componentDidMount() {\r\n    console.log(this.__proto__.constructor.name, \":componentDidMount\");\r\n    const { theMusicAudio, currMusicObj } = this.state;\r\n    theMusicAudio.src = currMusicObj.musicSrc;\r\n    document.addEventListener(\"keypress\", this.keyPressHandler);\r\n\r\n    // this.state.theMusicAudio.src = `https://chengchanghu.github.io/studynote/musicplayer-react/src/components/MusicPlayer/sample/music/another-year.mp3`;\r\n    this.state.theMusicAudio.src = `${this.state.baseUrl}${this.state.musicList[this.state.currMusicIndex].musicSrc}`;\r\n\r\n    // 音乐事件监听\r\n    theMusicAudio.addEventListener(\"durationchange\", this.durationChangeHandler);\r\n    theMusicAudio.addEventListener(\"ended\", this.endedHandler);\r\n    theMusicAudio.addEventListener(\"timeupdate\", this.timeUpdateHandler);\r\n\r\n    // document事件监听\r\n    // document.addEventListener(\"mousemove\", this.mouseMoveHandler);\r\n    document.addEventListener(\"mouseup\", this.mouseUpHandler);\r\n\r\n    // this.loadingResuorce();\r\n    this.bufferedUpdateHandler();\r\n\r\n    this.refs.localFile.addEventListener(\"change\", event => this.changeMusicByInputFile(event));\r\n  }\r\n\r\n  // *******************************************************************************\r\n  // 渲染\r\n  render() {\r\n    const {\r\n      baseUrl,\r\n      playFlag, panelFlag, musicList, currMusicObj,\r\n      currMusicTime,\r\n      playedBarWidth,\r\n      controllerLeft,\r\n      currMusicDuration,\r\n      currMusicIndex,\r\n      loadingProgress,\r\n      currMusicBufferedLength,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"MusicPlayer\" onKeyPress={this.keyPressHandler}>\r\n        loadingProgress: <span>{loadingProgress}</span>\r\n        <div className=\"ControlBox\">\r\n          {/* <audio src=\"./sunset-road.mp3\" id=\"TheMusic\"></audio> */}\r\n          {/* 上一首按钮 */}\r\n          <div className=\"prev\">\r\n            <div id=\"prev\" onClick={this.changeMusicByPrev}></div>\r\n          </div>\r\n          {/* 封面按钮 */}\r\n          <div className={`record-cover ${playFlag ? \"pause-status\" : \"play-status\"}`} id=\"recordCover\">\r\n            {/* <img src={currMusicObj.picSrc} alt=\"封面\" /> */}\r\n            <img src={baseUrl + currMusicObj.picSrc} alt=\"封面\" />\r\n            <div className=\"pause\" id=\"pause\" onClick={this.pauseMusic}></div>\r\n            <div className=\"play\" id=\"play\" onClick={this.playMusic}></div>\r\n            {/* <div className=\"loading\" id=\"loading\">\r\n              <div className=\"wave\"></div>\r\n            </div> */}\r\n          </div>\r\n          {/* 下一首按钮 */}\r\n          <div className=\"next\">\r\n            <div id=\"next\" onClick={this.changeMusicByNext}></div>\r\n          </div>\r\n\r\n          {/* 进度 */}\r\n          <div className=\"progress-box\" id=\"progressBox\">\r\n\r\n            {/* 歌曲名称栏 */}\r\n            <div className=\"song-title\">\r\n              <span id=\"songTitle\">{currMusicObj.title}</span>\r\n\r\n              {/* 歌曲面板展开按钮 */}\r\n              <span className={`more ${panelFlag ? \"more-active\" : \"\"}`} id=\"more\" onClick={this.openMusicPanel}></span>\r\n            </div>\r\n\r\n            {/* 进度条 */}\r\n            <div className=\"progress-bar\"\r\n              id=\"progressBar\"\r\n              onClick={event => this.clickProgressBarHandler(event)}>\r\n              <div className=\"buffered-bar\"\r\n                style={{ width: currMusicBufferedLength }}\r\n                onClick={event => this.clickBufferedBarHandler(event)}></div>\r\n              <div className=\"played-bar\"\r\n                onClick={event => {\r\n                  console.log(\"played-bar\");\r\n                  this.clickPlayedBarHandler(event);\r\n                  event.stopPropagation();\r\n                }}\r\n                style={{ width: playedBarWidth }} id=\"playedBar\"></div>\r\n              <div className=\"controller\"\r\n                onClick={event => {\r\n                  console.log(\"click controller\");\r\n                  event.stopPropagation();\r\n                }}\r\n                onMouseDown={event => {\r\n                  this.mouseDownControllerHandler(event);\r\n                  event.preventDefault();\r\n                }}\r\n                // onMouseUp={event => {\r\n                //   this.mouseUpControllerHandler(event);\r\n                // }}\r\n                style={{ left: controllerLeft }} id=\"controller\"></div>\r\n            </div>\r\n\r\n            {/* 歌曲时间 */}\r\n            <div className=\"song-duration\">\r\n              <span className=\"curr-duration\">\r\n                {this.sec2min(currMusicTime)}\r\n              </span>\r\n              /\r\n              <span className=\"total-duration\">\r\n                {/* {!isNaN(theMusicAudio.duration) ? this.sec2min(theMusicAudio.duration) : \"00:00\"} */}\r\n                {this.sec2min(currMusicDuration)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 歌曲面板 */}\r\n          <div className={`music-panel ${panelFlag ? \"active-music-panel\" : \"\"}`} id=\"musicPanel\">\r\n            <div className=\"panel-header\">歌曲面板\r\n              <input type=\"file\" className=\"local-file\" ref=\"localFile\" id=\"localFile\" />\r\n              <div className=\"local-music\" id=\"localMusic\"\r\n                onClick={this.clickLocalMusicHandler}>本地音乐</div>\r\n            </div>\r\n            <ul className=\"music-list\">\r\n              {\r\n                musicList.map((musicObj, index) => (\r\n                  <li key={musicObj.id}\r\n                    className={currMusicIndex === index ? \"active-music\" : \"\"}>\r\n                    <a href=\"#\"\r\n                      onClick={event => {\r\n                        this.changeMusicByMusicPanel(musicObj, index);\r\n                        event.preventDefault();\r\n                      }}>\r\n                      <img className=\"pic\" src={baseUrl + musicObj.picSrc} />\r\n                      {musicObj.title}\r\n                    </a>\r\n                  </li>)\r\n                )\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 播放音乐\r\n  playMusic = () => {\r\n    console.log(\"MusicPlayer: 播放歌曲\");\r\n    this.setState({ ...this.state, playFlag: true });\r\n    console.log(this.state.theMusicAudio.currentTime, this.state.currMusicDuration);\r\n    // if (Math.abs(this.state.theMusicAudio.currentTime - this.state.currMusicDuration) < 1.0) return;\r\n    this.state.theMusicAudio.play();\r\n  }\r\n\r\n  // 暂停音乐\r\n  pauseMusic = () => {\r\n    console.log(\"MusicPlayer: 暂停歌曲\");\r\n    this.setState({ ...this.state, playFlag: false });\r\n    this.state.theMusicAudio.pause();\r\n  }\r\n\r\n  // 歌曲列表项点击事件处理器\r\n  changeMusicByMusicPanel = async (musicObj, index) => {\r\n    console.log(index, musicObj.id, musicObj.title);\r\n    this.state.theMusicAudio.src = this.state.baseUrl + musicObj.musicSrc;\r\n    await this.playMusic();\r\n    this.setState({\r\n      ...this.state,\r\n      currMusicObj: musicObj,\r\n      currMusicIndex: index,\r\n    });\r\n  }\r\n\r\n  // 本地音乐点击事件\r\n  clickLocalMusicHandler = event => {\r\n    console.log(\"本地音乐点击事件\", this.refs.localFile);\r\n    this.refs.localFile.click();\r\n  }\r\n\r\n  // 音乐输入改变事件处理器\r\n  changeMusicByInputFile = event => {\r\n    const { musicList } = this.state;\r\n    console.log(\"音乐输入改变\");\r\n    let localMusicFile = event.target.files[0];\r\n    console.log(localMusicFile);\r\n\r\n    if (!!localMusicFile) {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(localMusicFile);\r\n      reader.onprogress = function (e) {\r\n        console.log(e);\r\n      };\r\n      reader.onload = () => {\r\n        console.log(\"本地音乐加载完成\");\r\n        let musicSrc = window.URL.createObjectURL(localMusicFile);\r\n        console.log(musicSrc);\r\n        this.state.theMusicAudio.src = musicSrc;\r\n\r\n        this.setState({\r\n          ...this.state, musicList: [...musicList, {\r\n            id: musicList.length + 1,\r\n            title: localMusicFile.name,\r\n            picSrc: \"/sample/img/music-4.png\",\r\n            musicSrc\r\n          }]\r\n        });\r\n\r\n        // theMusic.src = this.result;\r\n        // // document.querySelector(\"#songTitle\").innerHTML=localMusicFile. \r\n        // recordCover.classList.remove(\"pause-status\");\r\n        // recordCover.classList.add(\"play-status\");\r\n        // cancelAnimationFrame(RAFid);\r\n        // document.querySelector(\"#playedBar\").style.width = \"0%\";\r\n        // document.querySelector(\"#controller\").style.left = \"0%\";\r\n        // document.querySelector(\"#songTitle\").innerHTML = localMusicFile.name;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 上一首点击事件处理器\r\n  changeMusicByPrev = async () => {\r\n    const { theMusicAudio, currMusicIndex, musicList } = this.state;\r\n    let index = currMusicIndex > 0 ? currMusicIndex - 1 : musicList.length - 1;\r\n    theMusicAudio.src = musicList[index].musicSrc;\r\n    await this.setState({\r\n      ...this.state,\r\n      currMusicObj: musicList[index],\r\n      currMusicIndex: index,\r\n    });\r\n    this.playMusic();\r\n  }\r\n\r\n  // 下一首点击事件处理器\r\n  changeMusicByNext = async () => {\r\n    const { theMusicAudio, currMusicIndex, musicList } = this.state;\r\n    let index = currMusicIndex < musicList.length - 1 ? currMusicIndex + 1 : 0;\r\n    theMusicAudio.src = musicList[index].musicSrc;\r\n    await this.setState({\r\n      ...this.state,\r\n      currMusicObj: musicList[index],\r\n      currMusicIndex: index,\r\n    });\r\n    this.playMusic();\r\n  }\r\n\r\n  // 进度条点击事件处理器\r\n  clickProgressBarHandler = event => {\r\n    const { theMusicAudio, currMusicDuration } = this.state;\r\n    const { clientX, target: { offsetLeft, offsetWidth } } = event;\r\n    const scale = Math.min(1, Math.max(0, (clientX - offsetLeft) / offsetWidth));\r\n    console.log(\"进度条点击事件\", clientX, offsetLeft, offsetWidth, scale);\r\n    // theMusicAudio.currentTime = scale * currMusicDuration;\r\n    // this.setState({ ...this.state, currMusicTime: scale * currMusicDuration });\r\n  }\r\n\r\n  // 缓冲条点击事件处理器\r\n  clickBufferedBarHandler = event => {\r\n    const { theMusicAudio, currMusicDuration } = this.state;\r\n    const { clientX, target: { parentNode: { offsetLeft, offsetWidth } } } = event;\r\n    const scale = Math.min(1, Math.max(0, (clientX - offsetLeft) / offsetWidth));\r\n    console.log(\"缓冲条条点击事件\", clientX, offsetLeft, offsetWidth, scale);\r\n    theMusicAudio.currentTime = scale * currMusicDuration;\r\n    this.setState({ ...this.state, currMusicTime: scale * currMusicDuration });\r\n    event.stopPropagation();\r\n  }\r\n\r\n  // 已播放进度条点击事件处理器\r\n  clickPlayedBarHandler = event => {\r\n    const { theMusicAudio, currMusicDuration } = this.state;\r\n    const { clientX, target: { parentNode: { offsetLeft, offsetWidth } } } = event;\r\n    const scale = Math.min(1, Math.max(0, (clientX - offsetLeft) / offsetWidth));\r\n    console.log(\"已播放进度条点击事件\", clientX, offsetLeft, offsetWidth, scale);\r\n    theMusicAudio.currentTime = scale * currMusicDuration;\r\n    this.setState({ ...this.state, currMusicTime: scale * currMusicDuration });\r\n  }\r\n\r\n  // 进度控制器按下事件处理器\r\n  mouseDownControllerHandler = async event => {\r\n    console.log(\"进度控制器按下事件\", event.clientX, event.target.parentNode.offsetLeft);\r\n    await this.setState({ ...this.state, controllerFlag: true, controller: event.target });\r\n    document.addEventListener(\"mousemove\", this.mouseMoveHandler);\r\n    console.log(this.state.controllerFlag);\r\n    this.pauseMusic();\r\n  }\r\n\r\n  // 鼠标松开事件处理器\r\n  mouseUpHandler = async event => {\r\n    if (this.state.controllerFlag && this.state.controller) {\r\n      console.log(\"鼠标松开事件\", event);\r\n      await this.setState({ ...this.state, controllerFlag: false, controller: null });\r\n      document.removeEventListener(\"mousemove\", this.mouseMoveHandler);\r\n      this.playMusic();\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n\r\n  // 鼠标移动事件\r\n  mouseMoveHandler = event => {\r\n    this.throttle(() => {\r\n      if (this.state.controllerFlag) {\r\n        const { theMusicAudio,\r\n          controller: { parentNode: { offsetLeft, offsetWidth } },\r\n          currMusicDuration } = this.state,\r\n          { clientX } = event,\r\n          scale = Math.min(1, Math.max(0, (clientX - offsetLeft) / offsetWidth));\r\n        theMusicAudio.currentTime = scale * currMusicDuration;\r\n        this.setState({ ...this.state, currMusicTime: scale * currMusicDuration });\r\n      }\r\n    }, 200)();\r\n  }\r\n\r\n  // 键盘按键处理器\r\n  keyPressHandler = event => {\r\n    console.log(event.keyCode);\r\n    let { theMusicAudio, playFlag } = this.state;\r\n    switch (event.keyCode) {\r\n      case 32:\r\n        if (!playFlag) {\r\n          this.playMusic();\r\n        } else {\r\n          this.pauseMusic();\r\n        }\r\n        break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  // 音乐时长改变处理器\r\n  durationChangeHandler = () => {\r\n    // console.log(this.state.theMusicAudio.duration);\r\n    // this.setState({ ...this.state });\r\n    this.setState({ ...this.state, currMusicDuration: this.state.theMusicAudio.duration });\r\n  }\r\n\r\n  // 音乐结束事件处理器\r\n  endedHandler = () => {\r\n    this.pauseMusic();\r\n    if (this.state.controllerFlag) return;\r\n    this.changeMusicByNext();\r\n  }\r\n\r\n  // 时间更新处理器\r\n  timeUpdateHandler = event => {\r\n    let currentTime = this.state.theMusicAudio.currentTime;\r\n    let percntage = currentTime / this.state.currMusicDuration * 100;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      currMusicTime: currentTime,\r\n      playedBarWidth: `${percntage}%`,\r\n      controllerLeft: `${percntage}%`\r\n    });\r\n  }\r\n\r\n  // 缓冲区更新处理器\r\n  bufferedUpdateHandler = () => {\r\n    setTimeout(() => {\r\n      const { currMusicDuration, theMusicAudio } = this.state;\r\n      const timeRanges = theMusicAudio.buffered;\r\n      if (timeRanges.length != 0) {\r\n        this.setState({\r\n          ...this.state,\r\n          currMusicBufferedLength: `${timeRanges.end(timeRanges.length - 1) / currMusicDuration * 100}%`\r\n        });\r\n        if (timeRanges.end(timeRanges.length - 1) < currMusicDuration)\r\n          this.bufferedUpdateHandler();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n  // 加载资源\r\n  loadingResuorce = () => {\r\n    let p = new Promise(async (resolve, reject) => {\r\n      const { baseUrl, currMusicIndex, musicList } = this.state;\r\n      let currMusicUrl = `${baseUrl}${musicList[currMusicIndex]}`;\r\n      let requestHeader = {\r\n        method: \"GET\",\r\n        accept: \"audio/mp3\",\r\n        // cache: \"force-cache\",\r\n        responseType: 'arraybuffer',\r\n      };\r\n      let respHeader = await fetch(currMusicUrl, requestHeader);\r\n      let respReader = respHeader.body.getReader();\r\n      let totalLength = respHeader.headers.get(\"Content-Length\");\r\n      console.log(\"totalLength:\", totalLength);\r\n      let loadedDataBuffer = new Uint8Array(totalLength);\r\n\r\n      let loadedLength = 0;\r\n\r\n      while (true) {\r\n        const {\r\n          value,\r\n          done\r\n        } = await respReader.read();\r\n        if (done) break;\r\n        if (loadedLength > totalLength / 10) {\r\n          console.log(value);\r\n          break;\r\n        }\r\n\r\n        // console.log(loadedLength);\r\n        loadedDataBuffer.set(value, loadedLength);\r\n        loadedLength += value.length;\r\n\r\n        this.setState({ ...this.state, loadingProgress: (loadedLength / totalLength * 100).toFixed(2) + \"%\" });\r\n      }\r\n      console.log(loadedDataBuffer);\r\n      let blobURL = window.URL.createObjectURL(new Blob([loadedDataBuffer]));\r\n      resolve(blobURL);\r\n\r\n      // let audio = new Audio(blobURL);\r\n      // audio.play();\r\n\r\n      // loadingCover.style.display = \"none\";\r\n      // recordCover.classList.add(\"play-status\");\r\n    }).then(url => {\r\n      console.log(url);\r\n      // this.state.theMusicAudio.src = url;\r\n    });\r\n  }\r\n\r\n  sec2min = sec => {\r\n    const min = Math.floor(sec / 60);\r\n    sec = Math.floor(sec % 60);\r\n    return `${min < 10 ? '0' + min : min}:${sec < 10 ? '0' + sec : sec}`;\r\n  }\r\n\r\n  throttle = (fn, delay) => {\r\n    let valid = true;\r\n    return function () {\r\n      if (!valid) {\r\n        return false;\r\n      }\r\n      valid = false;\r\n      setTimeout(() => {\r\n        fn();\r\n        valid = true;\r\n      }, delay);\r\n    }\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"babel-polyfill\";\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { MusicPlayer } from \"./components/MusicPlayer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <MusicPlayer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}